/* Generated by Opal 0.8.0 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var $a, $b, TMP_1, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$require', '$puts', '$to_n', '$ready?', '$compile']);
  self.$require("opal");
  self.$require("opal-parser");
  Opal.cdecl($scope, 'DEFAULT_TRY_CODE', "class User\n  attr_accessor :name\n\n  def initialize(name)\n    @name = name\n  end\n\n  def admin?\n    @name == 'Admin'\n  end\nend\n\nuser = User.new('Bob')\nputs user\nputs user.admin?\n");
  self.$puts($scope.get('DEFAULT_TRY_CODE'));
  (function($base, $super) {
    function $TryOpal(){};
    var self = $TryOpal = $klass($base, $super, 'TryOpal', $TryOpal);

    var def = self.$$proto, $scope = self.$$scope;

    return (function($base, $super) {
      function $Editor(){};
      var self = $Editor = $klass($base, $super, 'Editor', $Editor);

      var def = self.$$proto, $scope = self.$$scope;

      return (def.$initialize = function(dom_id, options) {
        var self = this;

        return self["native"] = CodeMirror(document.getElementById(dom_id), options.$to_n());
      }, nil) && 'initialize'
    })(self, null)
  })(self, null);
  ($a = ($b = $scope.get('Document'))['$ready?'], $a.$$p = (TMP_1 = function(){var self = TMP_1.$$s || this, compiled = nil;

  compiled = $scope.get('Opal').$compile("puts \"hello depuis opal\"");
    eval(compiled);
    return self.$puts("ready !!! !! !!!!!! ");}, TMP_1.$$s = self, TMP_1), $a).call($b);
  return self.$puts("hello comment ca va bien ou bien bien bien ");
})(Opal);
